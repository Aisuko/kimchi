name: 'Backend CI/CD ðŸš€'
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  code_quality:
    name: 'Code Quality ðŸ“¦'
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
        poetry-version: ["1.8.2"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install ruff
        run: |
          pip install ruff==0.3.5
      - name: Run linters
        run: |
           make lint


  unittest_and_release:
    name: 'Unittest and Release ðŸ”¬'
    needs: [code_quality]
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
        poetry-version: ["1.8.2"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run:  |
          make install
      - name: Run tests
        run: |
           make test
      - name: Release
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        run: |
           poetry config repositories.source ${{ secrets.PYPI_HOMEPAGE }}
           poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
           poetry publish --build
